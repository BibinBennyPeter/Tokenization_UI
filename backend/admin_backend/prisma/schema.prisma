// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  role       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  kycLogs    KYCLog[]
}

model User {
  id             String      @id @default(uuid())
  email          String      @unique
  name           String
  password       String      // ðŸ”’ store securely with bcrypt; never return it
  role           UserRole   @default(INVESTOR)
  isActive       Boolean     @default(true)
  deactivatereason String?
  registrationAt DateTime    @default(now())
  lastLoginAt    DateTime?

  kycStatus      KYCStatus   @default(PENDING)
  kycSubmitted   Boolean     @default(false)
  isLandowner    Boolean     @default(false) // âœ… becomes true after KYB
  landownerVerifiedAt DateTime?

  totalInvested  Float       @default(0)
  totalEarnings  Float       @default(0)

  kycLogs        KYCLog[]
  properties Property[]
}

enum UserRole {
  INVESTOR
  LANDOWNER
  COMPLIANCE
}
enum KYCStatus {
  PENDING
  APPROVED
  REJECTED
}
model KYCLog {
  id        String   @id @default(uuid())
  userId    String
  adminId   String
  action    String   // 'approved' or 'rejected'
  comment   String?
  timestamp DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  admin Admin @relation(fields: [adminId], references: [id])
}

model Property {
  id              String         @id @default(uuid())
  ownerId         String
  title           String
  description     String?
  location        String?
  legalDocsUrl    String?
  status          PropertyStatus @default(PENDING)
  reviewComment   String?
  submittedAt     DateTime       @default(now())
  reviewedAt      DateTime?
  reviewedBy      String?

  owner           User           @relation(fields: [ownerId], references: [id])
}

enum PropertyStatus {
  PENDING
  UNDER_REVIEW
  APPROVED
  REJECTED
}



